@using MvcPL.Infrastructure.CustomHelpers
@model MvcPL.Models.UserModel.UserViewModel
@{
    Layout = ViewBag.isPartial ? null : "~/Views/Shared/_Layout.cshtml";
 }

<div id="edit-form">
    <h4>Edit Profile</h4>
    <hr />
@using (Ajax.BeginForm("Edit","User", new AjaxOptions { UpdateTargetId = "edit-form", OnSuccess = "successUpdate()",OnFailure="fialureUpdate()" },new { id="editform", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c=>c.Id)
    @Html.HiddenFor(c => c.RoleId)

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(m => m.Photo, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
               @Html.Image(Model.Photo, new[] { "form-control" },new {style= "height: 80px; width: 80px" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(m => m.Name, new {@class = "col-md-2 control-label"})
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.Name, new {@class = "form-control"})
            </div>
            <div class="col-md-5">
                @Html.ValidationMessageFor(m => m.Name, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
            </div>
            <div class="col-md-5">
                @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    @*<div class="form-group">
        <div class="row">
            @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.Password, new {@class = "form-control" ,type="password"})
            </div>
            <div class="col-md-5">
                @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>*@
    <div class="form-group">
        <div class="row">
            @Html.Label("New Photo", new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                <div class="input-group">
                    <input class="form-control" type="file" id="inputFile" name="Photo"/>
                    <label for="inputFile" class="customLabel" style="margin-left: -618px !important;">Choose a file</label>
                </div>
                <div class="input-group">
                </div>

            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="input-group">
                <button class="btn btn-primary" id="save-button"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
            </div>
        </div>
    </div>
}
</div>

<script type="text/javascript">

    
    function successUpdate() {
        alertify.success("Profile successfully updated");
    }

    function fialureUpdate() {
        alertify.success("Profile update error");
    }

    $(function () {

        $('#save-button').on('click', function (e) {
            e.preventDefault();
            var formData = new FormData($('#editform').get(0));

                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url: '@Url.Action("Edit", "User")',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (data) {

                            $("#edit-form").load('@Url.Action("Edit", "User")');
                            successUpdate();
                        }
                    });

            })
        });

</script>